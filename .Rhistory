tiempo_seguimiento = new.months.fu) %>%
dplyr::select(RID, AGE, PTGENDER, PTEDUCAT, DIAGNOSIS,
progresion, tiempo_progresion, tiempo_seguimiento,
namesfac)
A <- S %>%
mutate(progresion = (new.n.prog > 0),
t_progresion = ifelse(new.n.prog > 0, new.time.change, NA),
t_seguimiento = new.months.fu,
edad = as.numeric(AGE), edu = as.numeric(PTEDUCAT)) %>%
dplyr::select(RID, PTGENDER, DIAGNOSIS, edad, edu,
progresion, tiempo_progresion, tiempo_seguimiento,
all_of(namesfac))
A <- S %>%
mutate(progresion = (new.n.prog > 0),
t_progresion = ifelse(new.n.prog > 0, new.time.change, NA),
t_seguimiento = new.months.fu,
edad = as.numeric(AGE), edu = as.numeric(PTEDUCAT)) %>%
dplyr::select(RID, PTGENDER, DIAGNOSIS, edad, edu,
progresion, t_progresion, t_seguimiento,
all_of(namesfac))
A <- S %>%
mutate(progresion = (new.n.prog > 0),
t_progresion = ifelse(new.n.prog > 0, new.time.change, NA),
t_seguimiento = new.months.fu,
edad = as.numeric(AGE), edu = as.numeric(PTEDUCAT),
id = 1:nrow(S)) %>%
dplyr::select(PTGENDER, DIAGNOSIS, edad, edu,
progresion, t_progresion, t_seguimiento,
all_of(namesfac))
A <- S %>%
mutate(progresion = (new.n.prog > 0),
t_progresion = ifelse(new.n.prog > 0, new.time.change, NA),
t_seguimiento = new.months.fu,
edad = as.numeric(AGE), edu = as.numeric(PTEDUCAT),
id = 1:nrow(S)) %>%
dplyr::select(id, edad, edu, PTGENDER, DIAGNOSIS,
progresion, t_progresion, t_seguimiento,
all_of(namesfac))
A <- S %>%
mutate(progresion = (new.n.prog > 0),
t_progresion = ifelse(new.n.prog > 0, new.time.change, NA),
t_seguimiento = new.months.fu,
edad = as.numeric(AGE), edu = as.numeric(PTEDUCAT),
id = 1:nrow(S)) %>%
dplyr::select(id, edad, edu, PTGENDER, DIAGNOSIS,
progresion, t_progresion, t_seguimiento,
all_of(namesfac))
names(A)[4:5] <- c("genero", "dx")
# Revisar matriz de covarianza
library(lavaan)
load("~/neuropsycho_adni/results/cfa_parameters.RData")
factorcov <- inspect(fitcfa, what = "est")$psi
rm(fitcfa)
factorcov
?cov
cov(select(A, all_of(namesfac)))
########################################
### Seleccionar subconjunto de datos ###
########################################
### D. Giraldo, Feb 2021
# Leer datos y renombrar variables
library(dplyr)
load("~/neuropsycho_adni/processed_data/domain_scores_srb_firstvisit.RData")
A <- S %>%
mutate(progresion = (new.n.prog > 0),
t_progresion = ifelse(new.n.prog > 0, new.time.change, NA),
t_seguimiento = new.months.fu,
edad = as.numeric(AGE), edu = as.numeric(PTEDUCAT),
id = 1:nrow(S)) %>%
dplyr::select(id, edad, edu, PTGENDER, DIAGNOSIS,
progresion, t_progresion, t_seguimiento,
all_of(namesfac))
names(A)[4:5] <- c("genero", "dx")
write.table(A, file = "~/RLadies_bta_2021/datos/neuropsycho_data.sv", sep = ",", row.names = FALSE)
# Revisar matriz de covarianza
library(lavaan)
load("~/neuropsycho_adni/results/cfa_parameters.RData")
factorcov <- inspect(fitcfa, what = "est")$psi
rm(fitcfa)
cov(select(A, all_of(namesfac)))
rm(list=ls())
########################################
### Seleccionar subconjunto de datos ###
########################################
### D. Giraldo, Feb 2021
# Leer datos y renombrar variables
library(dplyr)
load("~/neuropsycho_adni/processed_data/domain_scores_srb_firstvisit.RData")
A <- S %>%
mutate(progresion = (new.n.prog > 0),
t_progresion = ifelse(new.n.prog > 0, new.time.change, NA),
t_seguimiento = new.months.fu,
edad = as.numeric(AGE), edu = as.numeric(PTEDUCAT),
id = 1:nrow(S)) %>%
dplyr::select(id, edad, edu, PTGENDER, DIAGNOSIS,
progresion, t_progresion, t_seguimiento,
all_of(namesfac))
names(A)[4:5] <- c("genero", "dx")
write.table(A, file = "~/RLadies_bta_2021/datos/neuropsycho_data.csv", sep = ",", row.names = FALSE)
# Vamos a agrupar unicamente con los puntajes por dominio
B <- A[, 9:14]
###########################
# Primer ejemplo: K-means #
###########################
k <- 2
k2.res <- kmeans(B, k)
table(k2.res$cluster)
setwd("~/RLadies_bta_2021")
# Cargar librerÃ­as
library(dplyr)
# Cargar datos
A <- read.csv("datos/neuropsycho_data.csv")
head(A)
# Vamos a agrupar unicamente con los puntajes por dominio
B <- A[, 9:14]
###########################
# Primer ejemplo: K-means #
###########################
k <- 2
k2.res <- kmeans(B, k)
table(k2.res$cluster)
k2.res
summary(k2.res)
library(factoextra)
fviz_cluster(k2.res, data = B, geom = "point", pointsize = 0.5)
table(k2.res$cluster, A$dx)
k <- 2
k2.res <- kmeans(B, k)
table(k2.res$cluster)
table(k2.res$cluster, A$dx)
table(k2.res$cluster)
table(A$dx, k2.res$cluster)
k <- 3
k3.res <- kmeans(B, k)
table(k3.res$cluster)
table(A$dx, k3.res$cluster)
table(k2.res$cluster, k3.res$cluster)
k <- 2
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(Sys.time())
k <- 2
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(Sys.time())
k <- 2
res1 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
k <- 4
set.seed(1987)
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(1987)
k <- 4
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(2021)
k <- 4
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(2020)
k <- 4
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(1995)
k <- 4
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(1995)
k <- 4
res1 <- kmeans(B, k)
set.seed(1995)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(2021)
k <- 5
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(Sys.time())
k <- 2
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(1995)
k <- 4
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
table(res1$cluster, res2$cluster)
set.seed(2021)
k <- 5
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(1987)
k <- 5
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
table(res1$cluster, res2$cluster)
set.seed(123)
k <- 6
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(2021)
k <- 6
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(1987)
k <- 5
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(2021)
k <- 6
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(2020)
k <- 5
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(2021)
k <- 6
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(Sys.time())
k <- 2
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
pl1 <- fviz_cluster(res1, data = B, geom = "point", pointsize = 0.5)
pl2 <- fviz_cluster(res2, data = B, geom = "point", pointsize = 0.5)
p1
pl1
pl2
set.seed(1995)
k <- 4
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
pl2 <- fviz_cluster(res2, data = B, geom = "point", pointsize = 0.5)
pl1 <- fviz_cluster(res1, data = B, geom = "point", pointsize = 0.5)
pl2 <- fviz_cluster(res2, data = B, geom = "point", pointsize = 0.5)
pl1
pl2
set.seed(2020)
k <- 5
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
pl1 <- fviz_cluster(res1, data = B, geom = "point", pointsize = 0.5)
pl2 <- fviz_cluster(res2, data = B, geom = "point", pointsize = 0.5)
pl1
pl2
set.seed(2021)
k <- 6
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
pl1 <- fviz_cluster(res1, data = B, geom = "point", pointsize = 0.5)
pl2 <- fviz_cluster(res2, data = B, geom = "point", pointsize = 0.5)
pl1
pl2
k <- 2
res <- kmeans(B, k)
print(res)
res$withinss
res$totss
res$tot.withinss
res$betweenss
df <- data.frame(k = 1:10) %>%
mutate(wss = kmeans(B, k)$tot.withinss)
res$tot.withinss
kmeans(B, k)$tot.withinss
tot.wcss <- function(k) {kmeans(B, k)$tot.withinss}
df <- data.frame(k = 1:10) %>%
mutate(wcss = tot.wcss(k))
df <- data.frame(k = 1:10, wss = numeric(10))
df <- data.frame(k = 1:10, wcss = numeric(10))
for (k in 1:10){
df$wcss  <- kmeans(B, k)$tot.withinss
}
df
df <- data.frame(k = 1:10, wcss = numeric(10))
for (k in 1:10){
df$wcss  <- kmeans(B, k)$tot.withinss
}
df
for (k in 1:10){
df$wcss[k]  <- kmeans(B, k)$tot.withinss
}
df
ggplot(df, aes(k, wcss)) + geom_point() + geom_line()
fviz_nbclust(df, kmeans, method = "wss")
fviz_nbclust(B, kmeans, method = "wss")
set.seed(2020)
df <- data.frame(k = 1:10, tot.wcss = numeric(10))
for (k in 1:10){
df$tot.wcss[k]  <- kmeans(B, k)$tot.withinss
}
ggplot(df, aes(k, tot.wcss)) + geom_point() + geom_line()
set.seed(2020)
fviz_nbclust(B, kmeans, method = "wss")
?fviz_nbclust
?silhouette
fviz_nbclust(B, kmeans, method = "wss")
fviz_nbclust(B, kmeans, method = "silhouette")
fviz_nbclust(B, kmeans, method = "wss")
fviz_nbclust(B, kmeans, method = "silhouette")
library(cluster)
?silhouette
?fviz_nbclust
fviz_nbclust(B, kmeans, method = "gap_stat")
?Nbclust
library(NbClust)
?NbClust
NK <- NbClust(data = B, method = "kmeans")
NK
summary(NK)
print(NK)
k <- 3
res <- kmeans(B, k)
fviz_cluster(res, data = B, geom = "point", pointsize = 0.5)
k <- 3
res <- kmeans(B, k)
table(res$cluster)
table(A$dx, res$cluster)
fviz_cluster(res, data = B, geom = "point", pointsize = 0.5)
table(res$cluster, NK$Best.partition)
nd <- colnames(B)
nd <- colnames(B)
m <- melt(A, measure.vars = nd)
head(m)
library(reshape2)
nd <- colnames(B)
m <- melt(A, measure.vars = nd)
head(m)
ggplot(m, aes(grupo3, value, colour = variable)) + geom_boxplot()
k <- 3
res <- kmeans(B, k)
A$grupo3 <- res$cluster
table(res$cluster)
table(A$dx, res$cluster)
nd <- colnames(B)
m <- melt(A, measure.vars = nd)
head(m)
ggplot(m, aes(grupo3, value, colour = variable)) + geom_boxplot()
A$grupo3 <- as.factor(res$cluster)
table(res$cluster)
table(A$dx, res$cluster)
nd <- colnames(B)
m <- melt(A, measure.vars = nd)
head(m)
ggplot(m, aes(grupo3, value, colour = variable)) + geom_boxplot()
ggplot(m, aes(variable, value, colour = grupo3)) + geom_boxplot()
fviz_nbclust(B, kmeans, method = "wss")
?fviz_nbclust
fviz_nbclust(B, hcut, method = "wss")
fviz_nbclust(B, cluster::pam, method = "wss")
rm(list = ls())
setwd("~/RLadies_bta_2021")
# Cargar datos
A <- read.csv("datos/neuropsycho_data.csv")
head(A)
setwd("~/RLadies_bta_2021")
# Cargar datos
A <- read.csv("datos/neuropsycho_data.csv")
head(A)
head(A)
head(A)
head(A)
paste(names(A))
paste0(names(A), sep = ", ")
paste0(names(A), collapse = ", ")
A <- read.csv("datos/neuropsycho_data.csv")
head(A)
# Cargar librerÃ­as
library(dplyr)
library(reshape2)
library(ggplot2)
library(cluster)
library(factoextra)
library(NbClust)
# Necesitamos unicamente con los puntajes cognitivos de las personas con MCI:
B <- A %>%
filter(dx == "MCI") %>%
select(MEMORY, LANGUAGE, EXECUTIVE,
VISUOSPATIAL, ORIENTATION, ATTENTION)
?kmeans
k <- 2
k2.res <- kmeans(B, k)
k2.res
str(k2.res)
k <- 2
k2.res <- kmeans(B, k)
k2.res
str(k2.res)
str(k2.res)
k <- 3
k3res <- kmeans(B, k)
str(k3res)
table(k2res$cluster, k3res$cluster)
k <- 2
k2res <- kmeans(B, k)
str(k2res)
# Ahora con k=3
k <- 3
k3res <- kmeans(B, k)
str(k3res)
# ComparaciÃ³n
table(k2res$cluster, k3res$cluster)
?fviz_cluster
fviz_cluster(k2res, data = B, geom = "point", pointsize = 0.5)
fviz_cluster(k3res, data = B, geom = "point", pointsize = 0.5)
fviz_cluster(k3res, data = B)
fviz_cluster(k3res, B, geom = "point")
ggsave("presentacion/imgs/fviz_k2res.png", p2, width = 14, height = 12, units = "cm", dpi = 300, bg = "transparent")
p2 <- fviz_cluster(k2res, data = B, geom = "point", pointsize = 0.5)
p3 <- fviz_cluster(k3res, data = B, geom = "point", pointsize = 0.5)
ggsave("presentacion/imgs/fviz_k2res.png", p2, width = 14, height = 12, units = "cm", dpi = 300, bg = "transparent")
p2 <- fviz_cluster(k2res, data = B, geom = "point", pointsize = 0.75)
p3 <- fviz_cluster(k3res, data = B, geom = "point", pointsize = 0.75)
ggsave("presentacion/imgs/fviz_k2res.png", p2, width = 14, height = 12, units = "cm", dpi = 300, bg = "transparent")
ggsave("presentacion/imgs/fviz_k3res.png", p3, width = 14, height = 12, units = "cm", dpi = 300, bg = "transparent")
fviz_cluster(kmeans(B, 4), data = B, geom = "point", pointsize = 0.75)
pl <- fviz_cluster(kmeans(B, 4), data = B, geom = "point", pointsize = 0.75)
ggsave("presentacion/imgs/fviz_k4res.png", pl, width = 14, height = 12, units = "cm", dpi = 300, bg = "transparent")
pl <- fviz_cluster(kmeans(B, 5), data = B, geom = "point", pointsize = 0.75)
ggsave("presentacion/imgs/fviz_k5res.png", pl, width = 14, height = 12, units = "cm", dpi = 300, bg = "transparent")
set.seed(Sys.time())
k <- 2
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(Sys.time())
k <- 3
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(1995)
res1 <- kmeans(B, 4)
res2 <- kmeans(B, 4)
table(res1$cluster, res2$cluster)
set.seed(1987)
res1 <- kmeans(B, 4)
res2 <- kmeans(B, 4)
table(res1$cluster, res2$cluster)
set.seed(2020)
k <- 5
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(Sys.time())
k <- 3
res1 <- kmeans(B, k)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(1987)
res1 <- kmeans(B, 4)
set.seed(2021)
res2 <- kmeans(B, 4)
table(res1$cluster, res2$cluster)
k <- 4
set.seed(1987)
res1 <- kmeans(B, k)
set.seed(2021)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(1986)
res1 <- kmeans(B, k)
set.seed(2021)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
set.seed(1986)
res1 <- kmeans(B, k)
set.seed(2020)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
k <- 5
set.seed(1987)
res1 <- kmeans(B, k)
set.seed(2020)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
k <- 5
set.seed(1987)
res1 <- kmeans(B, k)
set.seed(2020)
res2 <- kmeans(B, k)
table(res1$cluster, res2$cluster)
pl <- fviz_cluster(res1, data = B, geom = "point", pointsize = 0.75)
ggsave("presentacion/imgs/fviz_k5resA.png", pl, width = 14, height = 12, units = "cm", dpi = 300, bg = "transparent")
pl <- fviz_cluster(res2, data = B, geom = "point", pointsize = 0.75)
ggsave("presentacion/imgs/fviz_k5resB.png", pl, width = 14, height = 12, units = "cm", dpi = 300, bg = "transparent")
pl <- fviz_cluster(kmeans(B, 6), data = B, geom = "point", pointsize = 0.75)
ggsave("presentacion/imgs/fviz_k6res.png", pl, width = 14, height = 12, units = "cm", dpi = 300, bg = "transparent")
pl <- fviz_cluster(kmeans(B, 7), data = B, geom = "point", pointsize = 0.75)
ggsave("presentacion/imgs/fviz_k7res.png", pl, width = 14, height = 12, units = "cm", dpi = 300, bg = "transparent")
k2res$withinss
